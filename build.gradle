plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.agendapro'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Dependencia principal de MapStruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	// Procesador de anotaciones para MapStruct
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	//basic auth
	implementation 'org.springframework.boot:spring-boot-starter-security'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacoco {
	toolVersion = '0.8.11' // Puedes usar la versión más reciente disponible
}

tasks.named('test') {
	useJUnitPlatform()
}


jacocoTestReport {
	dependsOn test // Ejecuta las pruebas antes de generar el reporte
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/agendapro/market/configuration/*",
					"com/agendapro/market/dto/*",
					"com/agendapro/market/entity/*",
					"com/agendapro/market/mapper/*",
					"com/agendapro/market/shared/*",
					"com/agendapro/market/exception/*"
			])
		}))
	}
}

plugins.withType(JacocoPlugin).configureEach {
	test.finalizedBy 'jacocoTestReport'
}